
println "Host: " + java.net.InetAddress.getLocalHost()
println "Gradle: " + gradle.gradleVersion + " JVM: " + org.gradle.internal.jvm.Jvm.current() + " Groovy: " + GroovySystem.getVersion()
println "Build: group: '${project.group}', name: '${project.name}', version: '${project.version}'"

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'findbugs'
apply plugin: 'pmd'
apply plugin: 'checkstyle'

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven {
        url "http://xbib.org/repository"
    }
}

configurations {
    wagon
}

dependencies {
    testCompile "org.apache.logging.log4j:log4j-core:2.5"
    testCompile('junit:junit:4.12')
    wagon 'org.apache.maven.wagon:wagon-ssh-external:2.10'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:deprecation,unchecked"
}
test {
    testLogging {
        showStandardStreams = false
        exceptionFormat = 'full'
    }
}
tasks.withType(FindBugs) {
    ignoreFailures = true
    reports {
        xml.enabled = false
        html.enabled = true
    }
}
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier 'javadoc'
}
artifacts {
    archives sourcesJar, javadocJar
}
if (project.hasProperty('signing.keyId')) {
    signing {
        sign configurations.archives
    }
}
apply from: 'gradle/publish.gradle'